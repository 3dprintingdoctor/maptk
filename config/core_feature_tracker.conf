# Algorithm to use for 'feature_tracker', which is of type 'track_features'.
# Must be one of the following options:
# 	- core
type = core

block core

  # Configuration for the feature detector
  block feature_detector
    include ocv_SURF_detector_descriptor.conf
  endblock


  # Configuration for the descriptor extractor
  block descriptor_extractor
    include ocv_SURF_detector_descriptor.conf
  endblock


  block feature_matcher
    # Algorithm to use for 'feature_matcher', which is of type 'match_features'.
    # Must be one of the following options:
    # 	- homography_guided
    # 	- ocv
    # 	- vxl_constrained
    type = homography_guided

    # Algorithm to use for 'feature_matcher1'.
    # Must be one of the following options:
    # 	- homography_guided
    # 	- ocv_brute_force :: OpenCV brute-force feature matching algorithm
    # 	- ocv_flann_based :: OpenCV flann-based feature matching algorithm
    # 	- vxl_constrained
    homography_guided:feature_matcher1:type = ocv_flann_based

    # If cross-check filtering should be performed.
    homography_guided:feature_matcher1:ocv_flann_based:cross_check = true

    # Number of neighbors to use when cross checking
    homography_guided:feature_matcher1:ocv_flann_based:cross_check_k = 1


    # Algorithm to use for 'feature_matcher2'.
    # Must be one of the following options:
    # 	- homography_guided
    # 	- ocv_brute_force :: OpenCV brute-force feature matching algorithm
    # 	- ocv_flann_based :: OpenCV flann-based feature matching algorithm
    # 	- vxl_constrained
    homography_guided:feature_matcher2:type =

    # Algorithm to use for 'filter_features', which is of type 'filter_features'.
    # Must be one of the following options:
    # 	- magnitude
    homography_guided:filter_features:type =

    # Algorithm to use for 'homography_estimator', which is of type
    # 'estimate_homography'.
    # Must be one of the following options:
    # 	- ocv
    # 	- vxl
    homography_guided:homography_estimator:type = vxl

    # The acceptable error distance (in pixels) between warped and measured points
    # to be considered an inlier match.
    homography_guided:inlier_scale = 10

    # The minimum required inlier point count. If there are less than this many
    # inliers, no matches will be output.
    homography_guided:min_required_inlier_count = 0

    # The minimum required percentage of inlier points. If the percentage of points
    # considered inliers is less than this amount, no matches will be output.
    homography_guided:min_required_inlier_percent = 0
  endblock # feature_matcher


  block loop_closer
    # Keyframe based loop closure produces better results, but is slower.
    # For the faster approach used in previous MAP-Tk versions use:
    # include loop_closer_multi_method.conf
    include loop_closer_keyframe.conf
  endblock # loop_closer

endblock # core
