MAPTK v0.3.0 Release Notes
==========================


Updates since v0.2.1
--------------------

Core Library

 * Added abstract algorithms for triangulation of landmarks.

 * Added function to extract a sub-matrix from a matrix

 * Added functions to extract and update a sub-vector from a vector

 * Added functions to compute determinants of 2x2 and 3x3 matrices.

 * Added a class to represent a similarity transformation (scale, rotation,
   and translation).

 * Added clone() functions to camera and landmark.

 * Add transform() functions to apply similarity transformations to landmarks,
   cameras, covariances, and maps of cameras and landmarks.

 * Added a templated set_value function to config_block to allow setting values
   directly without first needing a boost::lexical_cast.

 * Added "yes" and "no" as value boolean configuration strings

 * Replaced track_features_simple with track_features_default class,
   requiring any config file to change this value from "simple" to "default".

 * Added algorithm definition for similarity transformation estimation.

 * Added several helper functions to track_set class.

 * Added a convert_image algorithm so that an image conversion between different
   formats can be pre-computed.  This is important for non trivial image
   conversions (e.g. sending image to GPU) to prevent them from occuring
   multiple times on the same image.

 * Added ability to add rotational offset when converting INS data into
   cameras.

 * Added additional error robustness to INS I/O operations (specifically the
   input stream and reading operations).

VCL Library

 * Added implementation of GPU feature detector.

 * Added implementation of GPU descriptor extractor (BRIEF descriptor).

 * Added implementation of GPU feature matcher using a local search box.

 * Added implementation of convert_image to upload to the GPU.

 * Current tracking implementation is not as optimized as it could be.
   The tracker does not maintain pointers to the GPU data structures from the
   previous frame; therefore, the features and descriptors are re-uploaded to
   the GPU at each frame.  This will be optimized in a future release.

VXL Library

 * Added implementation of triangulation of landmarks algorithm using vpgl.

 * Added similarity transformation estimation implementation using
   vgl_compute_similarity_3d.

Tests

 * Factored out some reuseable test functions into common header files.

 * Added tests for VXL similarity transform estimation

Tools

 * When loading POS files in the bundle_adjust_tracks tools, triangulate to
   compute initial landmark positions.

 * Added the use of similarity transform estimation to SBA tool when POS files
   are input, transforming both cameras and landmarks back into the space of
   the input POS files.

 * Added optional file output to draw_tracks plot generation script.

 * pos2krtd utility now uses a configuration file.

 * Added configuration options for both SBA and pos2krtd tools to specify a
   rotational offset for input POS file (INS data) via a quaternion.


Fixes since v0.2.1
------------------

Core Library

 * Fixed a bug in interpretation of yaw-pitch-roll in the rotation class.
   It previously differed from that used in the POS file format by a 180
   degree rotation about the local Y axis.
