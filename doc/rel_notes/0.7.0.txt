MAP-Tk v0.7.0 Release Notes
==========================

This is a minor release of MAP-Tk that provides both new functionality and
fixes over the previous v0.6.0 release.  This release adds a Ceres Solver
plugin which provides a much improved bundle adjustment backend.  It also
adds support for lens distortion modeling.


Updates since v0.6.0
---------------------------------

Main Library

 * Added a metric in metrics.h to compute the median reprojection error.
   The median provides a more robust alternative to RMSE and is more useful
   for characterizing error when using robust loss functions.

 * Added lens distortion to the camera_intrinsics class.  The model uses the
   same conventions that OpenCV uses.  The distortion parameter vector
   is compatible between OpenCV and MAP-Tk.

 * Added lens undistortion functions to camera_intrinsics which use the
   Gauss-Newton method to iteratively solve for the inverse of distortion.
   Convergence is fast and more accurate than the implementation in OpenCV.

 * Added reading and writing of lens distortion parameters to the camera
   stream operators and, as a result, to the KRTD file io.

 * Added 3D triangulation algorithms using Eigen to triangulate.h

 * Added a constructor from the base class for camera_<T>

 * Added a function to camera_<T> to compute depth of a 3D point to the
   image plane.  This can also be used to check if a point is behind
   the camera by checking the sign of the depth.

 * Added a new essential matrix data structure, including abstract
   base class, and switched the essential matrix estimation algorithm
   to use this class instead of a 3x3 matrix.

Ceres Plugin

 * Added a new plugin which uses Google Ceres Solver as a back end for
   optimizations.

 * Added an implementation of the bundle_adjust algorithm using Ceres to
   solve the optimization problem.  This supports access to Ceres options
   via the configuration block and currently supports selection of various
   different solver algorithms and robust loss functions.

 * Added unit tests for the Ceres implementation of bundle_adjust that
   duplicates the same tests used for the VXL back end plus a few additional
   tests focusing on robust estimation.

 * Added support to both use and estimate lens distortion parameters in the
   bundle_adjust algorithm using Ceres.  Three different distortion models
   can be selected, each adding additional parameters to the previous model.
   Furthermore, many parameters can be locked in the optimization allowing
   for even more fine-grained selection of model parameter subsets.

 * Added unit tests for Ceres bundle adjustment covering the use and estimation
   of lens distortion paramters.

Core Plugin

 * Added a core plugin implementation of triangulate_landmarks using the
   triangulation functions added to the main library.

 * Moved the implementatation of initialize_cameras_landmarks from the VXL
   plugin into core and updated it to use the new triangulation and essential
   matrix functionality of the main library to remove dependence on VXL.

OpenCV Plugin

 * Added unit tests to verify that the lens distortion functions in MAP-Tk
   produce equal results to those routines in OpenCV.

VXL Plugin

  * Moved the initialize_cameras_landmarks implementation to the core plugin.

C Interface

 * Updated algorithm related code to use new functions in algorithm C++ base
   class.

Python Interface

 * Updated algorithm related code to use new algorithm C-interface functions.

Tests

 * Moved test code from vxl::triangulate_landmarks to a common header to also
   share with tests for core::triangulate_landmarks and any other future
   implementaitons of triangulate_landmarks.

Fixes since v0.6.0
-------------------------------

Tests

  * Renamed the tests for the main library from "test_core" to "test_maptk"
    to differentiate between tests for the "core" plugin.
