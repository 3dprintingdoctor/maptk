MAPTK v1.0.0 Release Notes
==========================

This is a major release of MAPTK that provides both new functionality and fixes
over the previous v0.5.0 release.


Updates since v0.5.0
--------------------

Build System

 * Revised module system into providing tools to build library and plugins for
   dynamic loading.

 * Added install rules for CMake utilities for MAPTK users to create MAPTK
   complient plugin interface libraries.

 * Added private header CMake variables for add_library call, allowing
   visibility of file in IDEs.

MAPTK Library / Core Plugin

 * Added plugin support for loading externally defined algorithm
   implementations.

 * Refactored source file layout.

 * Separated out algorithm implementations that used to be in the main MAPTK
   library into a core libraray witha a plugin interface.

 * Removed use of logging helper macros from header files as logging macro
   header is not a public header.

 * Added optional mask image input to track features algorithm definition and
   core implementation.

 * Added transform_image function to efficiently transform in-place an image
   given a unary function that is operated on every pixel.

OCV Plugin

 * Converted module library into a library-plugin pair.

PROJ Plugin

 * Converted module library into a library-plugin pair.

VisCL Plugin

 * Converted module library into a library-plugin pair.

VXL Plugin

 * Converted module library into a library-plugin pair.

Test System / Tests

 * Refactored test code to reference correct libraries and use new plugin
   loading and management where required.

 * Added automatic message generation to test executables to inform the caller
   of available test names in that executable.

Tools

 * In track features tool, Added ability to specify paired mask image files.


Fixes since v0.5.0
------------------

Build System

 * Fixed addition of library to global maptk_libraries property to only happen
   if that library is being exported.

 * Removed target generation for doxygen template file configuration which had
   caused race-conditions in parallel builds that included documentation
   generation.

Test System / Tests

 * Fixed CMake-side parsing of test source files during discovery mode to allow
   extra white-space in IMPLEMENT_TEST() and TEST_PROPERTY() parameter areas.
