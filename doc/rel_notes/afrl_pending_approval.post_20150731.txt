MAPTK Release Notes for changes pending release approval by AFRL
================================================================

This file documents release notes for changes made to MAPTK which require
public release approval from AFRL.  After approval, the changes and
corresponding notes below will be encorporated into a public numbered
release version, and the content of this file will be reset.


Updates since last public release
---------------------------------

Main Library

 * Added a function in match_matrix.h to compute the symmetric match matrix
   corresponding to a track set for all or a subset of the frames.

 * Renamed the algorithm base class clone() method to base_clone() and added
   a new clone() method at the algorithm_impl level.  These functions are
   identical except the base_clone() method returns a base class algorithm
   shared pointer and the clone() method returns a shared pointer to the
   specific algorithm intermediate base class.

 * Added a Necker reverse tranformation to transform.h to help get out
   of a common local minima during bundle adjustment.

Tools

 * Added a new tool to read in a track file and compute the match matrix.
   The match matrix can be written out to a matrix in ASCII form.

 * Added an option to the bundle adjust tool to write out an updated track
   file corresponding to the filtered tracks used in bundle adjustment.

 * Added an option to the bundle adjust tool to apply a Necker reversal
   to the input cameras and points before continuing to apply bundle
   adjustment.  This allows an inverted solution from a previous run to
   be restarted to find the correct solution.

Scripts

 * Added a Python script to read the ASCII match matrix file produced by
   the match matrix tool and plot it.

 * Added Python modules to read and write KRTD, PLY, and homography files.

 * Added a Python script to read an NVM file from VisualSfM and write out
   KRTD camera files

 * Added a Python script to read in a PLY file and set of KRTD camera files
   and write out a homography files.  This script fits a ground plane to
   the points in the PLY and then uses the cameras to derive homographies
   from each frame back to the first frame as induced by the plane.

 * Added a Python script to compute the extents of the output space of
   a sequence of homographies applied to video of fixed size.

 * Added a Python script to transform homographies by translating and
   scaling the output space.

Fixes since last public release
-------------------------------
