MAPTK Release Notes for changes pending release approval by AFRL
================================================================

This file documents release notes for changes made to MAP-Tk which require
public release approval from AFRL.  After approval, the changes and
corresponding notes below will be incorporated into a public numbered
release version, and the content of this file will be reset.


Updates since last public release
---------------------------------

Main Library

 * Added a function to match_matrix.h to use the match matrix to score each
   track on how important it is in covering the match matrix.

Core Plugin

 * Added a new matcher that uses a fundamental matrix constraint to filter bad
   matches.

 * Added a new loop closure algorithm that exhaustively matches all pairs of
   frames, or can be configured to match all frames within a moving temporal
   window.

OpenCV Plugin

 * Added CMake support for handing and marking the use of OpenCV version >= 3.

 * Overhauled OpenCV algorithm introspection structure. Versions 3.x took away
   the previous ability to introspect algorithm types and parameters,
   requiring, for at least versions 3.x, for there to be manual wrappings of
   each algorithm to be exposed. Removed introspection for any version and
   now have cross-version compatible manual wrappings of all algorithms at
   least present in 3.x that fill the feature detection, descriptor extraction
   and feature matching roles.

 * Added an OpenCV fundamental matrix estimation wrapper. OpenCV can estimate a
   fundamental matrix with the presence of outliers using RANSAC.

Scripts

 * Added a Python script which uses OpenCV to produce mosaicked images of
   video frames using the homographies produced by maptk_track_features.


 Fixes since last public release
-------------------------------

Plugins

 * Corrected all plugins to use the Vital logging framework instead of
   cout and cerr for status, debug, and error messages.

Tools

 * Corrected the track_features and bundle_adjust_tracks tools to use the
   Vital logging framework instead of cout and cerr for status, debug,
   and error messages.

 * Added a new track filtering option to the bundle_adjust_tracks tool
   that filters tracks based on match matrix importance.  The idea is that
   long tracks are usually most important, but some short tracks may be more
   important if they are the only tracks that tie together a pair of frames.
