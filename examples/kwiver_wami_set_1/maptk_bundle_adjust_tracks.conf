# include the parameters for the video_reader
block video_reader
  include core_video_input_image_pos_list.conf
  split:metadata_source:pos:metadata_directory = metadata
  split:metadata_source:pos:metadata_extension = .txt
endblock

#  Path to an input file to be opened as a video. This could be either a video
#  file or a text file containing new-line separated paths to sequential image
#  files.
video_source = frame_list.txt


# create a macro for the name of the camera config file for this data set
# so that the same file can be referenced in multiple places including
# in the default MAP-Tk config files
default_camera_config := clif_2007_camera_intrinsics.conf

# include the default camera intrinsics
block base_camera
  include $LOCAL{default_camera_config}
endblock

# include bundle adjustment parameters
block bundle_adjuster
  include ceres_bundle_adjuster.conf
endblock

# Algorithm to use for 'track_filter'.
# Must be one of the following options:
# 	- core
track_filter:type = core

# Filter the tracks keeping those covering at least this many frames. Set to 0
# to disable.
track_filter:core:min_track_length = 10

# Sub-sample the cameras for by this rate.
# Set to 1 to use all cameras, 2 to use every other camera, etc.
camera_sample_rate = 1

# Path to write a file containing filtered feature tracks
filtered_track_file =

#  This file contains the geographical location of the origin of the local
#  cartesian coordinate system used in the camera and landmark files.  This file
#  is use for input and output. If the files exists it will be read to define
#  the origin. If the file does not exist an origin will be computed from
#  geographic metadata provided and written to this file. The file format is
#  ASCII (degrees, meters):
#  latitude longitude altitude
geo_origin_file = results/geo_origin.txt


# When loading a subset of cameras, should we optimize only the loaded cameras
# or also initialize and optimize the unspecified cameras
initialize_unloaded_cameras = true

# include SfM initializer parameters
block initializer
  include core_initializer.conf
endblock

#  A directory containing input KRTD camera files.
#
#  This is mutually exclusive with init_cameras_with_metadata option for system
#  initialization, and shadowed by the input_reference_points_file when using an
#  st_estimator.
input_krtd_files =

#  Enables initialization of cameras from video metadata.
#  This is mutually exclusive with the input_krtd_files option for system
#  initialization, and shadowed by the input_reference_points option when using
#  an st_estimator.
init_cameras_with_metadata = true

# File containing reference points to use for reprojection of results into the
# geographic coordinate system.
#
# This option is NOT mutually exclusive with input_*_files options when using an
# st_estimator. When both this and another input files option are specified, use
# of the reference file is given priority over the input cameras.
#
# Reference points file format (lm=landmark, tNsM=track N state M):
# 	lm1.x lm1.y lm1.z t1s1.frame t1s1.x t1s1.y t1s2.frame t1s2.x t1s2.y ...
# 	lm2.x lm2.y lm2.z t2s1.frame t2s1.x t2s1.y t2s2.frame t2s2.x t2s2.y ...
# 	...
#
# At least 3 landmarks must be given, with at least 2 track states recorded for
# each landmark, for transformation estimation to converge, however more of each
# is recommended.
#
# Landmark z position, or altitude, should be provided in meters.
input_reference_points_file =

# Path an input file containing feature tracks
input_track_file = results/tracks.txt

#  A quaternion used to offset rotation from metadata when updating cameras.
#  This option is only relevent if init_cameras_with_metadata is enabled.
ins:rotation_offset = 0 0 0 1

# Apply a Necker reversal to the initial cameras and landmarks
necker_reverse_input = false

# A directory in which to write the output KRTD files.
output_krtd_dir = results/krtd

# Path to the output PLY file in which to write resulting 3D landmark points
output_ply_file = results/landmarks.ply

# A directory in which to write the output POS files.
output_pos_dir = results/pos

# Algorithm to use for 'st_estimator'.
# Must be one of the following options:
# 	- vxl
st_estimator:type = vxl

# config file for the canonical transform
block can_tfm_estimator
  include core_pca_canonical_tfm.conf
endblock

# Use the homogeneous method for triangulating points. The homogeneous method
# can triangulate points at or near infinity and discard them.
triangulator:core:homogeneous = false

# Algorithm to use for 'triangulator'.
# Must be one of the following options:
# 	- core
# 	- vxl
triangulator:type = core
